from aiogram import Bot, Dispatcher, executor, types
from background import keep_alive
from aiogram import *
from aiogram.utils.markdown import hlink
from aiogram.types import *
from aiogram import types
from aiogram.dispatcher.filters import Text

TOKEN = "example"  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
admin_id = 1111111  # –ò–î –∞–¥–º–∏–Ω–∞ (—É–∑–Ω–∞—Ç—å –º–æ–∂–Ω–æ –≤ –±–æ—Ç–µ @username_to_id_bot )

boty = Bot(token=TOKEN)
dp = Dispatcher(boty)


@dp.message_handler(commands="start")
async def process_start_command(message: types.Message):
  keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

  buttons_row1 = ["üßê–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"]
  buttons_row2 = ["‚ö°Ô∏è–ö—Ä—É—Ç–∫–∏", "üé¨–í–∏–¥–µ–æ"]
  buttons_row3 = ["üí´–ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
  buttons_row4 = ["üé•–°—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–Ω—è"]  

  keyboard.add(*buttons_row1)
  keyboard.add(*buttons_row2)
  keyboard.add(*buttons_row3)
  keyboard.add(*buttons_row4)  

  await message.answer(
      f"–ü—Ä–∏–≤–µ—Ç {message['from'].first_name}üëã!\n \n–Ø - –õ–û–•–ë–û–¢‚ù§Ô∏è\n–ú–æ–π —Ö–æ–∑—è–∏–Ω –º–µ–Ω—è –Ω–µ —É–≤–∞–∂–∞–µ—Çü•≤\n–ù–æ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ –ø–æ–≤–æ–¥—É –≤—Å—è–∫–∏—Ö –≤–∞–∂–Ω—ã—Ö —à—Ç—É–∫–æ–≤–∏–Ω \n \n–¢—ã–∫–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ! üëá \n \n \n –°–ø–∞—Å–∏—Ç–µ...",
      reply_markup=keyboard)


@dp.message_handler(Text(equals="‚ö°Ô∏è–ö—Ä—É—Ç–∫–∏"))
async def with_puree(message: types.Message):

  await message.reply(
      '–ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É\nhttps://forms.gle/pLUhLLX5KnSPZjvCA\n–ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏ –æ–± —ç—Ç–æ–º —Å—é–¥–∞, –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—à—å –µ–µ.\n \n \n—Å–ª—É—à–∞–π—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–Ω–∞—á–µ –º–µ–Ω—è –æ–ø—è—Ç—å —É–¥–∞—Ä—è—Ç'
  )


@dp.message_handler(Text(equals="üí´–ü–æ–¥–¥–µ—Ä–∂–∫–∞"))
async def with_puree(message: types.Message):
  await message.reply(
      "üçÉ –ê—Ä—Ç—ã(—Ä–∏—Å—É–Ω–∫–∏)\nüçÉ–ù–∞–±–æ—Ä –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ (–µ—Å–ª–∏ –æ–±—ä—è–≤–∏–ª–∏, —á—Ç–æ –Ω–∞–¥–æ)\nüçÉ–¢—ã –Ω–µ –Ω–∞—à–µ–ª –≤ –ø—Ä–æ—à–ª—ã—Ö –∫–Ω–æ–ø–∫–∞—Ö —Ç–æ, —á—Ç–æ –∏—Å–∫–∞–ª\nüçÉ–ß—Ç–æ —Ç–æ –≤–∞–∂–Ω–æ–µ\n \n \n...–Ω–µ —Å–ø–∞–º—å —Ç—É—Ç –ø–æ –ª–∏—á–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º, –∏–Ω–∞—á–µ –º–µ–Ω—è –∑–∞–∫—Ä–æ—é—Ç –≤ —á—É–ª–∞–Ω–µ, –∞ —Ç–µ–±—è –∑–∞–±–∞–Ω—è—Ç...‚õîÔ∏èüò∞"
  )


@dp.message_handler(Text(equals="üßê–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"))
async def process_start_command(message: types.Message):
  keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
  buttons = [
      "üí°–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ", "üí∏–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ",
      "üîÅ–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"
  ]

  for button in buttons:
    keyboard.add(button)

  await message.answer("–í—ã–±–∏—Ä–∞–π", reply_markup=keyboard)


@dp.message_handler(Text(equals="üí°–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ"))
async def with_puree(message: types.Message):
  await message.reply(
      "–õ—é–±—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∏–¥–µ–∏ –Ω–∞ —Å—á–µ—Ç:\n \nüçÄ–í–∏–¥–µ–æ \nüçÄ–¢–ì –∫–∞–Ω–∞–ª–∞\nüçÄ–°—Ç—Ä–∏–º–æ–≤\nüçÄ–ö–æ–Ω—Ç–µ–Ω—Ç–∞\n \n–ò –≤ —Ü–µ–ª–æ–º —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –õ–æ—Ö—É—Ñ–∏üôà\n \n–ú–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ —Å—é–¥–∞, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—Å—è —Å –Ω–∏–º –æ —Ä–µ–∞–ª–∑–∞—Ü–∏–∏ü´°\n \n \n...–Ω–∞–¥–µ—é—Å—å —Ç—É—Ç —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ, —Ö–æ—á—É –≤—Å–ø–æ–º–Ω–∏—Ç—å –∫–∞–∫–æ–≥–æ –±—ã—Ç—å –±–µ–∑ —Å–∏–Ω—è–∫–æ–≤...ü§ï"
  )


@dp.message_handler(Text(equals="üí∏–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ"))
async def with_puree(message: types.Message):
  await message.reply(
      "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –ø–∏—à–∏ —Å—é–¥–∞.üëá\n \n‚≠êÔ∏è –†–µ–∫–ª–∞–º–∞ –≤ –¢–ì –∫–∞–Ω–∞–ª–µ/–Æ—Ç—É–±–µ/–¢–∏–∫–¢–æ–∫–∏ –¥—Ä—É–≥–∏–µ —Å–æ—Ü —Å–µ—Ç–∏.\n \n‚≠êÔ∏è –õ—é–±—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã —Å —É—á–∞—Å—Ç–∏–µ–º loxyfi, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä.\n \n \n \n...—Å–ø–∞—Å–∏–±–æ —Ç–µ–±–µ, –¥–æ–±—Ä—ã–π —á–µ–ª–æ–≤–µ–∫, –Ω–∞–¥–µ—é—Å—å –æ–Ω –º–µ–Ω—è –ø–æ–∫–æ—Ä–º–∏—Ç...ü•π"
  )


@dp.message_handler(Text(equals="üîÅ–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"))
async def process_start_command(message: types.Message):
  keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

  buttons_row1 = ["üßê–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"]
  buttons_row2 = ["‚ö°Ô∏è–ö—Ä—É—Ç–∫–∏", "üé¨–í–∏–¥–µ–æ"]
  buttons_row3 = ["üí´–ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
  buttons_row4 = ["üé•–°—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–Ω—è"]  

  keyboard.add(*buttons_row1)
  keyboard.add(*buttons_row2)
  keyboard.add(*buttons_row3)
  keyboard.add(*buttons_row4)  

  await message.answer(
      f"–ü—Ä–∏–≤–µ—Ç {message['from'].first_name}üëã!\n \n–Ø - –õ–û–•–ë–û–¢‚ù§Ô∏è\n–ú–æ–π —Ö–æ–∑—è–∏–Ω –º–µ–Ω—è –Ω–µ —É–≤–∞–∂–∞–µ—Çü•≤\n–ù–æ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ –ø–æ–≤–æ–¥—É –≤—Å—è–∫–∏—Ö –≤–∞–∂–Ω—ã—Ö —à—Ç—É–∫–æ–≤–∏–Ω \n \n–¢—ã–∫–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ! üëá \n \n \n –°–ø–∞—Å–∏—Ç–µ...",
      reply_markup=keyboard)


@dp.message_handler(Text(equals="üé¨–í–∏–¥–µ–æ"))
async def with_puree(message: types.Message):
  await message.reply(
      "–ï—Å–ª–∏ —Ç—ã —Ç—É—Ç, —Ç–æ —Ç–µ–±—è –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å!üòë\n \n–ù–µ –∑–∞–±—É–¥—å –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–µ–±—è\n \n \n \n–í –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∏ –∏–≥—Ä—ãüèÜ\n \n–ò –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω—ã –±—É–¥—É—Ç –¥–æ–±—Ä–æ–≤–æ–ª—å—Ü—ã –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –≤–∏–¥–µ–æ.\n–¢–∞–∫ –∂–µ –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –ø–ª–∞—à–∫—É –≤ –±—É–¥—É—â–µ–º –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –≤–∞–º–∏ –∏ –Ω–∞–±–æ—Ä–∞ –ª—é–¥–µ–π.ü§´"
  )


@dp.message_handler(lambda message: message.text == "üé•–°—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–Ω—è")
async def process_links_button(message: types.Message):
  # Inline keyboard with links
  inline_keyboard = types.InlineKeyboardMarkup(row_width=2)

  youtube_button = types.InlineKeyboardButton(
      "YouTube üìπ",
      url="https://www.youtube.com/channel/UCf09OSt2gfS9KUMyOfltFiw")
  tiktok_button = types.InlineKeyboardButton(
      "TikTok üê£", url="https://www.tiktok.com/@loxyfi?_t=8fUlQGEsHR3&_r=1")
  chat_button = types.InlineKeyboardButton(
      "–ß–∞—Ç üêæ", url="https://t.me/+lIL8cEahp4RkMWEy")
  channel_button = types.InlineKeyboardButton("–¢–ì –ö–∞–Ω–∞–ª üçÑ",
                                              url="https://t.me/loxyfi")
  discord_button = types.InlineKeyboardButton(
      "Discord üëæ", url="https://discord.gg/s32D5RfK")
  twitch_button = types.InlineKeyboardButton(
      "Twitch üåµ", url="https://www.twitch.tv/loxyfi")
  donate_button = types.InlineKeyboardButton(
      "–î–æ–Ω–∞—Ç—ã üí∏", url="https://www.donationalerts.com/r/loxyfi")

  inline_keyboard.add(youtube_button, tiktok_button, chat_button,
                      channel_button, discord_button, twitch_button,
                      donate_button)

  await message.answer("–ü–û–î–ü–ò–°–´–í–ê–ô–°–Ø –ù–ê –ú–ï–ù–Ø –¢–£–¢ ü¶ã",
                       reply_markup=inline_keyboard)


@dp.message_handler()
async def process_start_command(message: types.Message):
  if message.reply_to_message == None:
    if '/start' not in message.text:
      await boty.forward_message(
          admin_id,
          message.from_user.id,
          message.message_id,
      )
      await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è!üíï')
  else:
    if message.from_user.id == admin_id:
      if message.reply_to_message.forward_from:
        await boty.send_message(message.reply_to_message.forward_from.id,
                                message.text)
    else:
      await boty.forward_message(
          admin_id,
          message.from_user.id,
          message.message_id,
      )
      await message.answer('–î–æ–ø–æ–ª–Ω—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è!üíï')


@dp.message_handler(content_types=['photo'])  # –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ, —Ç–æ–ª—å–∫–æ —Å —Ñ–æ—Ç–æ
async def handle_docs_photo(message):
  await boty.forward_message(admin_id, message.from_user.id,
                             message.message_id)
  await message.answer('–û–≥–æ, –¥–∞–∂–µ —Ç–∞–∫... –ü–µ—Ä–µ–¥–∞–ª –∞–¥–º–∏–Ω—É!')


@dp.message_handler(content_types=['document'])  # —Ç—É—Ç —Å —Ñ–∞–π–ª–æ–º
async def handle_docs_photo(message):
  await boty.forward_message(admin_id, message.from_user.id,
                             message.message_id)
  await message.answer('–§–∞–π–ª–∏–∫? –°–ø–∞—Å–∏–±–æ, –ø–µ—Ä–µ–¥–∞–ª –∞–¥–º–∏–Ω—É)')


keep_alive()

if __name__ == '__main__':
  print("starting")
  executor.start_polling(dp)
